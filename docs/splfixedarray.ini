id = "splfixedarray";
title = "SplFixedArray Is Now An IteratorAggregate";
description = "SplFixedArray used to be a Iterator, and is now a IteratorAggregate. 

They aren't identical behaviors. They're both iterable but they go about it two completely different ways: Iterator means the object modifies itself during iteration, and IteratorAggregater means the object remains unchanged because it uses a proxy object to handle iteration.

Note that is it not possible to extends both at the same time: they are incompatible. 
";
code = "<?php
$array = new SplFixedArray(5);

var_dump($array instanceof Iterator);
var_dump($array instanceof IteratorAggregate);

?>";
before = "bool(true)
bool(false)";
after = "bool(false)
bool(true)
";
seeAlso["Standard PHP Library (SPL)"] = "https://www.php.net/manual/en/migration80.incompatible.php#migration80.incompatible.spl";
seeAlso["Classes extending IteratorAggregate can not implement RecursiveIterator"] = "https://github.com/php/php-src/issues/8156";
seeAlso["Introduction to Iterators and Generators in PHP"] = "https://www.entropywins.wtf/blog/2017/10/16/introduction-to-iterators-and-generators-in-php/";
seeAlso["IteratorAggregate"] = "https://www.php.net/manual/en/class.iteratoraggregate.php";
seeAlso["Iterator"] = "https://www.php.net/manual/en/class.iterator.php";
deprecation = "";
phpVersion = "8.0";
alternatives[] = "";
related[] = "";
phpError = "class-%s-cannot-implement-both-iterator-and-iteratoraggregate-at-the-same-time";
keywords[] = "spl";
keywords[] = "native";
phpError[] = "";