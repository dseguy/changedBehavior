id = "UnbindingThis";
title = "Removing \$this from a closure is deprecated";
description = "When a closure is created in a non-static method, it imports automatically the current object. Nowadays, it is not possible to remove that object from the closure, as it would not run anymore.";
code = "<?php

class x {
	private $p = 1;
	
	function foo() {
		return function () { return $this->p; };
	}
}

$x = new x;
$closure = $x->foo();
print $closure->bindTo(null);

?>";
before = "PHP Deprecated:  Unbinding $this of closure is deprecated in /codes/UnbindingThis.php on line 13

Deprecated: Unbinding $this of closure is deprecated in /codes/UnbindingThis.php on line 13
PHP Fatal error:  Uncaught Error: Object of class Closure could not be converted to string in /codes/UnbindingThis.php:13
Stack trace:
#0 {main}
  thrown in /codes/UnbindingThis.php on line 13

Fatal error: Uncaught Error: Object of class Closure could not be converted to string in /codes/UnbindingThis.php:13
Stack trace:
#0 {main}
  thrown in /codes/UnbindingThis.php on line 13
";
after = "PHP Warning:  Cannot unbind $this of closure using $this in /codes/UnbindingThis.php on line 13

Warning: Cannot unbind $this of closure using $this in /codes/UnbindingThis.php on line 13
";
seeAlso[] = "";
deprecation = "";
phpVersion = "8.0";
alternatives[] = "Make the closure static at creation time.";
alternatives[] = "Replace the object with another object, that holds neutral values.";
related[] = "";
keywords[] = "";
features[] = "closure";
features[] = "static";
phpError[] = ""
