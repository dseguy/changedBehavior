id = "implicitNullable";
title = "Implicit Nullable";
description = "A typed argument with a default value of ``null`` was also implicitly nullable: it would accept null as a value. This is deprecated in PHP 8.4, and will be removed in PHP 9.0. It is recommended to make the nullable type explicit in the code.

That issue applies to arguments in methods and functions, but not on properties or returned values. 
";
code = "<?php

function foo(int $a = null) {
	var_dump($a);
}

foo(1);
foo(null);

?>";
before = "int(1)
NULL
";
after = "PHP Deprecated:  foo(): Implicitly marking parameter $a as nullable is deprecated, the explicit nullable type must be used instead 

Deprecated: foo(): Implicitly marking parameter $a as nullable is deprecated, the explicit nullable type must be used instead 
int(1)
NULL
";
seeAlso[] = "";
deprecation = "8.4";
phpVersion = "9.0";
alternatives[] = "Add the nullable type to the type declaration";
alternatives[] = "Remove the null as a default value";
alternatives[] = "Use a default value that is within the specified type";
related[] = "";
keywords[] = "";
features[] = "nullable";
features[] = "default-value";
features[] = "parameter";
phpError["Default value for property of type int may not be null. Use the nullable type ?int to allow null default value"] = "%s():-implicitly-marking-parameter-$%s-as-nullable-is-deprecated,-the-explicit-nullable-type-must-be-used-instead";
analyzer[] = "Classes/HiddenNullable"