id = "enforceNativeReturnType";
title = "Enforcing Native PHP ReturnType";
description = "Until PHP 8.0, PHP would not enforce the return types in its own interfaces. Incompatible signatures were possible. 

In PHP 8.1, such return type is now enforced. It should be set manually, or be temporarily suspended with the #[\ReturnTypeWillChange] attribute.";
code = "<?php

class x implements iterator {
	function __construct() { echo __METHOD__; }
	public current() {}
}

new x;

?>";
before = "x::__construct";
after = "PHP Deprecated:  Return type of x::current() should either be compatible with Iterator::current(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in /codes/enforceNativeReturnType.php on line 5

Deprecated: Return type of x::current() should either be compatible with Iterator::current(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice in /codes/enforceNativeReturnType.php on line 5
x::__construct";
seeAlso[] = "";
deprecation = "8.1";
phpVersion = "9.0";
alternatives[] = "Add the returntype";
alternatives[] = "Add the ReturnTypeWillChange attribute to the method";
related[] = "";
phpError = "Return type of x::current() should either be compatible with Iterator::current(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";
keywords[] = "error after";
features[] = "interface"
features[] = "returntype"
